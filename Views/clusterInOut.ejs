<html>
    <head>
        <%- include('./head') %>
        
    </head>
    <body>
        <%- include('./header') %>
        <section>
            <h1 id="title">InOut Graph</h1>
            <div class="canvas"></div>
            <ul id="list">
            </ul>
        </section>
        <script type="text/javascript">
            const inOutLog = <%- JSON.stringify(clusterInOutUsers) %>
            const ul = document.querySelector('#list')

            const Gaepo = inOutLog.filter(e => e.location === 0)
            const Seocho = inOutLog.filter(e => e.location === 1)

            const GaepoPoint = {};
            const SeochoPoint = {};
            
            let num = 0;
            let hour = 0;
            Gaepo.forEach(log => {
                if (Object.keys(GaepoPoint).indexOf(String(log.day)) === -1) {
                    hour = 0
                    GaepoPoint[log.day] = { [hour] : num }
                }
                while ((hour + 1) * 3600 < log.timestamp)
                {
                    GaepoPoint[log.day][hour + 1] = num
                    hour += 1
                }   
                num += log.inout
                GaepoPoint[log.day][hour + 1] = num
            })
            Seocho.forEach(log => {
                if (Object.keys(SeochoPoint).indexOf(String(log.day)) === -1) {
                    hour = 0
                    SeochoPoint[log.day] = { [hour] : num }
                }
                while ((hour + 1) * 3600 < log.timestamp)
                {
                    SeochoPoint[log.day][hour + 1] = num
                    hour += 1
                }   
                num += log.inout
                SeochoPoint[log.day][hour + 1] = num
            })

            console.log(Object.entries(SeochoPoint['210419']))

            const line = d3.line()(Object.entries(SeochoPoint['210419']).map(([key, value]) => [key * 10, 300 - value]))
            const svg = d3.select('.canvas')
            .append('svg')
            .attr('width', 500).attr('height', 500)
            .append('path')
            .attr('d', line)
            .attr('stroke', 'black')
            .attr("stroke-width", 1)
            .attr('fill', 'none')
            
            

            
            
            



            /*
            const frag = document.createDocumentFragment()
            dummy.forEach(({ timestamp, id, location }) => {
                const li = document.createElement("li")
                const hour = parseInt(timestamp / 3600)
                const min = parseInt((timestamp % 3600) / 60)
                li.insertAdjacentHTML(
                    "beforeend",
                    `<div>
                        <p>${id}</p>  
                        <p>"개포"</p>
                        <p>${hour}:${min}</p>
                    </div>`
                )
                frag.appendChild(li)
            })
            ul.appendChild(frag)
            */
        </script>
    </body>
</html>